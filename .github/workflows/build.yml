name: Build

on:
  pull_request:
  push:
  workflow_dispatch:

# Matches submodule commit
env:
  JUCE_VERSION: "6.0.4"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # os: [macos-latest, windows-latest]
        os: [macos-latest]
        plugin: [
          'Chorus',
          'Compressor-Expander',
          'Delay',
          'Distortion',
          'Flanger',
          'Panning',
          'Parametric EQ',
          'Phaser',
          'Ping-Pong Delay',
          'Pitch Shift',
          'Ring Modulation',
          'Robotization-Whisperization',
          'Template Frequency Domain',
          'Template Time Domain',
          'Tremolo',
          'Vibrato',
          'Wah-Wah'
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
        with:
          submodules: true

      - name: Cache JUCE
        id: cache-juce
        uses: actions/cache@v2
        with:
          path: "~/JUCE"
          key: juce-${{ env.JUCE_VERSION }}-${{ runner.os }}

      - name: macOS JUCE Download
        if: steps.cache-juce.outputs.cache-hit != 'true'
        run: |
          cd ~
          wget https://github.com/juce-framework/JUCE/releases/download/${{ env.JUCE_VERSION }}/juce-${{ env.JUCE_VERSION }}-osx.zip
          unzip ./juce-${{ env.JUCE_VERSION }}-osx.zip
          rm ./juce-${{ env.JUCE_VERSION }}-osx.zip

      - name: macOS Build
        run: |
          cd "${{github.workspace }}/${{ matrix.plugin }}"
          ~/JUCE/Projucer.app/Contents/MacOS/Projucer --resave "${{ matrix.plugin }}.jucer"
          xcodebuild -project "./Builds/MacOSX/${{ matrix.plugin }}.xcodeproj" -alltargets -configuration Release -arch $(uname -m)

      - name: Zip plugin
        run: |
          cd "${{github.workspace }}/${{ matrix.plugin }}/Products"
          rm -rf ./*.vst3 ./lib*.a
          mv ./VST3/* ./
          zip -r "${{ matrix.plugin }}.zip" ./*

      # TODO: Windows steps
      #
      # - name: Windows Build
      #   if: runner.os == "Windows"
      #   run: |
      #     cd ~
      #     wget https://github.com/juce-framework/JUCE/releases/download/6.0.4/juce-6.0.4-osx.zip
      #     unzip ./juce-6.0.4-osx.zip
      #     rm ./juce-6.0.4-osx.zip

      #     cd "${{github.workspace }}/${{ matrix.plugin }}"
      #     ~/JUCE/Projucer.app/Contents/MacOS/Projucer --resave "${{ matrix.plugin }}.jucer"
      #     xcodebuild -project "./Builds/MacOSX/${{ matrix.plugin }}.xcodeproj" -alltargets -configuration Release -arch $(uname -m)
      #     cd "${{github.workspace }}/${{ matrix.plugin }}/Products"
      #     zip -r "${{ matrix.plugin }}.zip" ./*

      # TODO: match format of https://github.com/juandagilc/Audio-Effects/releases/tag/v1.0.0
      #
      # Standalone.macOS.zip
      # Standalone.Windows.zip
      # VST3.macOS.zip
      # VST3.Windows.zip
      - name: Upload zipped artefacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{github.workspace }}/${{ matrix.plugin }}/Products/*.zip
          if-no-files-found: error
